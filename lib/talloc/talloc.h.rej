***************
*** 80,106 ****
  #define talloc_destroy(ctx) talloc_free(ctx)
  #endif
  
- #ifndef PRINTF_ATTRIBUTE
- #if (__GNUC__ >= 3)
- /** Use gcc attribute to check printf fns.  a1 is the 1-based index of
-  * the parameter containing the format, and a2 the index of the first
-  * argument. Note that some gcc 2.x versions don't handle this
-  * properly **/
- #define PRINTF_ATTRIBUTE(a1, a2) __attribute__ ((format (__printf__, a1, a2)))
- /* We need __typeof__ to make this type-safe. */
- #define talloc_set_destructor(ptr, function)				 \
- 	do {								 \
- 		int (*_talloc_destructor_fn)(typeof(ptr)) = (function); \
- 		_talloc_set_destructor((ptr), _talloc_destructor_fn);	 \
- 	} while(0)
- #else
- #define PRINTF_ATTRIBUTE(a1, a2)
- #define talloc_set_destructor(ptr, function) \
- 	_talloc_set_destructor((ptr), (int (*)(void *))(function))
- #endif
- #endif
- 
- 
  /* The following definitions come from talloc.c  */
  void *_talloc(const void *context, size_t size);
  void _talloc_set_destructor(const void *ptr, int (*destructor)(void *));
--- 103,108 ----
  #define talloc_destroy(ctx) talloc_free(ctx)
  #endif
  
  /* The following definitions come from talloc.c  */
  void *_talloc(const void *context, size_t size);
  void _talloc_set_destructor(const void *ptr, int (*destructor)(void *));

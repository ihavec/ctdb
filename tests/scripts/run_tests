#!/bin/bash

# The ability of ctdb_test_env to take tests on the command-line is
# nice, but here we need to hack around it with that colon to reset
# the arguments that it sees.
. $(dirname $0)/ctdb_test_env :

. ctdb_test_functions.bash

usage() {
    cat <<EOF
Usage: run_tests [OPTIONS] [TESTS]

EOF
    exit 1
}

######################################################################

temp=$(getopt -n "$prog" -o "xh" -l help -- "$@")

[ $? != 0 ] && usage

eval set -- "$temp"

while true ; do
    case "$1" in
	-x) set -x; shift ;;
	--) shift ; break ;;
	-h|--help|*) usage ;; # * shouldn't happen, so this is reasonable.
    esac
done

######################################################################

for f; do
    [ -x $f ] || fail "test \"$f\" is not executable"
    ctdb_test_run "$f"
done

test_exit
